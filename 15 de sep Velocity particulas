ArrayList <particula> particulas; //solo con una letra se diferencia 
// ArrayList objeto en si mismo que permite manipular otros objetos del mismo 

void setup(){
   background(255);
 size(400,400);
 particulas = new ArrayList <particula>(); //ArrayList también es un objeto
 for (int i =0; i<100; i++ ){ //si quieres mas particulas 
   //ciclo de iteración posible
  particulas.add(new particula()); 
 }
 
 
 
}


void draw(){
  
  for(particula p : particulas){
   p.display();
   p.movimiento();
  }
}

void mousePressed(){
 particula foo = new particula(mouseX, mouseY);
 particulas.add(foo);
 }

class particula{
 float x,y,v,a,t;//v= velocidad a=angulo t=tamaño
 color c;
 
 particula(float x_, float y_, float v_, float a_, float t_, color c_){ //metodo de construccion de clase
    x=x_;
    y=y_;
    v=v_;
    a=a_;
    t=t_;
    c=c_;
 }

particula(){ //metodo de construccion de clase siempre con el mismo nombre pero parametro diferente
  x = random(400);
  y = random(400);
  v = random(10);
  a= random(TWO_PI);
  t= random (1,30);
  c = color (random(255), random(255), random (255));

}

particula (float x_, float y_){
   x = x_;
  y = y_;
  v = random(10);
  a= random(TWO_PI);
  t= random (1,30);
  c = color (random(255), random(255), random (255));
}


 void display(){ //refleje en la pantalla
  pushMatrix();
  translate(x,y);
  noStroke();
  fill(c);
  ellipse(0,0,t,t);
  popMatrix();
 
 }

void movimiento(){
  x += cos (-2*y);
  y += tan (-2*x);
//xspeed = xspeed + xacc;
//xpos = xpos + xspeed;



}
}
